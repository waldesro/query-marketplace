openapi: 3.0.3
info:
#  description: Query Marketplace
  version: "1.0.0"
  title: Query Marketplace
  contact:
    name: Walter de Sola
    email: waldesro@gmail.com
servers:
  - url: 'http://{environment}.junglesoftware.com'
    description: Non-Production
    variables:
      environment:
        default: int
        enum:
          - int
          - uat
  - url: 'https://junglesoftware.com'
    description: Production
paths:
  /authorization/v1/authorizeClient:
    parameters:
      - $ref: '#/components/parameters/Registration-Key'
    post:
      tags:
        - authorizeClient
      summary: authenticate user
      operationId: authorizeClient
      description: Authorize user to the marketplace
      responses:
        200:
          $ref: '#/components/responses/200-Authorized'
        400:
          $ref: '#/components/responses/400-BadRequest'
        401:
          $ref: '#/components/responses/401-Unauthorized'
        404:
          $ref: '#/components/responses/404-UserNotFound'
        405:
          $ref: '#/components/responses/405-InvalidAccountInfo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationRequest'
        description: User to authenticate
  /authorization/v1/createAccount:
    post:
      tags:
        - createAccount
      summary: Create Account
      operationId: createAccount
      description: Create Account with required data
      responses:
        200:
          $ref: '#/components/responses/200-AccountCreated'
        402:
          $ref: '#/components/responses/402-AccountExists'
        405:
          $ref: '#/components/responses/405-InvalidAccountInfo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountInfoRequest'
  /query/v1/listAll/{softwareId}:
    parameters:
      - $ref: '#/components/parameters/SoftwareId'
    get:
      tags:
        - ListAllQueries
      summary: Return list of queries available for the software
      description: Return a list with all queries for a given software
      operationId: listAllQueries
      security:
        - ApiKeyAuth: []
      responses:
        200:
          $ref: '#/components/responses/200-ListAllQueries'
        404:
          $ref: '#/components/responses/404-ApplicationNotFound'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
  parameters:
    Registration-Key:
      name: Registration-Key
      description: 'Client Registration key'
      in: header
      required: true
      schema:
        type: string
    SoftwareId:
      name: softwareId
      in: path
      description: Software Id
      required: true
      schema:
        type: string
        format: uuid
  schemas:
    AuthorizationRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: user_mail@somedomain.com
        password:
          type: string
          format: password
          example: abc123
    AuthorizationResponse:
      type: object
      required:
        - authorizationKey
        - authorizedTimestamp
      allOf:
        - '#/components/schemas/CommonDomainRS'
      properties:
        authorizationKey:
          type: string
        authorizedTimestamp:
          type: string
          format: date-time
          example: '2023-12-31T01:00:00.00Z'
    CommonDomainRQ:
      type: object
      description: Request Context object.
    CommonDomainRS:
      type: object
      description: A common domain object all domain Response objects should implement.
    ErrorsDTO:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDTO'
    ErrorDTO:
      type: object
      description: A single error in the API response
      required:
        - code
        - errorMessage
        - severity
      properties:
        code:
          type: string
          description: A unique ID for the particular error
          example: QMP-A-0001
        errorMessage:
          type: string
          description: Error detail
          example: Message example for UI feedback
        severity:
          type: string
          description: The severity of the error
          enum:
            - INFO
            - WARNING
            - ERROR
          example: ERROR
    QueryDetailsDTO:
      type: object
      description: List of query detail
      allOf:
        - '#/components/schemas/CommonDomainRS'
      properties:
        queries:
          type: array
          items:
            $ref: '#/components/schemas/QueryDetailDTO'
    QueryDetailDTO:
      type: object
      description: Query detail
      required:
        - id
        - shortDescription
      properties:
        id:
          type: string
          format: uuid
          description: Query UUID
        shortDescription:
          type: string
          description: A short description about the query
          example: Account balance
        longDescription:
          type: string
          description: Long description
          example: This query provides detail of each account and the balance
        price: 
          type: number
          description: Query price in USA dollars
          example: 1.99
          format: double
        purchased:
          type: boolean
          description: Boolean indicating if the query was already purchased by the account
          example: true
        author:
          $ref: '#/components/schemas/AuthorDTO'
    AuthorDTO:
      type: object
      description: Query Author
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          description: Author Id
        name:
          type: string
          description: Author name
        photo: 
          type: string
          description: Path to photo
        detail:
          type: string
          description: Detail information about author
        profileLink:
          type: string
          description: Link to author profile
        numberOfQueries:
          type: integer
          description: Number of queries that author has
        overallReviewRate:
          type: number
          format: float
          description: Rate author has based on users reviews
          example: 4.5
        reviews:
          type: array
          description: List of reviews
          items:
            $ref: '#/components/schemas/AuthorReviewDTO'
    AuthorReviewDTO:
      type: object
      description: Author review
      required:
        - id
        - reviewComment
        - rate
        - date
      properties:
        id:
          type: string
          format: uuid
          description: Review Id
        reviewComment:
          type: string
          description: Review comments
        rate:
          type: number
          description: Rate
          format: float
          example: 4.5
        date:
          type: string
          format: date-time
          description: Date and Time of review
    AccountInfoRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/CommonDomainRQ'
      properties:
        accountInfo:
          $ref: '#/components/schemas/AccountInfo'
    AccountInfo:
      type: object
      description: Information about the account
      required:
        - user
        - password
        - name
        - software
        - countryISO
      properties:
        user:
          type: string
          format: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
          description: User email
        password:
          type: string
          format: password
          description: User password
        name:
          type: string
          description: Full name
        software:
          type: string
          description: Software used for ERP
          enum:
            - MONICA
        countryISO:
          type: string
          description: Country 3 digits ISO code
          maxLength: 3
          minLength: 3
          example: USA
  responses:
    200-Authorized:
      description: User was Authorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorizationResponse'
    200-AccountCreated:
      description: Account was successfully created
    200-ListAllQueries:
      description: List of all queries
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryDetailsDTO'
    404-UserNotFound:
      description: User account not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsDTO'
    405-InvalidAccountInfo:
      description: Invalid account information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsDTO'
    402-AccountExists:
      description: Account could not be created. Existing one
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsDTO'
    404-ApplicationNotFound:
      description: Application ID not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsDTO'
    400-BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDTO'
    401-Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDTO'
